{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"collapsed_sections":["crALrXyJ20IH"],"machine_shape":"hm","gpuType":"A100"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"accelerator":"GPU"},"cells":[{"cell_type":"markdown","source":["#### For Google Colab users:"],"metadata":{"id":"crALrXyJ20IH"}},{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XGK6Hn9q2Dpp","executionInfo":{"status":"ok","timestamp":1686693027155,"user_tz":-420,"elapsed":26265,"user":{"displayName":"Nam Đỗ Đặng Kiến","userId":"08452134426123711871"}},"outputId":"255371a2-5e2d-420c-8b3d-3995ce8b7241"},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/gdrive\n"]}],"source":["from google.colab import drive\n","drive.mount('/content/gdrive', force_remount=True)"]},{"cell_type":"code","source":["!7z x \"/content/gdrive/MyDrive/UIT Projects/Khai thác dữ liệu/source/datasets/card_transaction.zip\" -o\"/content\""],"metadata":{"id":"dsaw1jGCTQOr","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1686693040294,"user_tz":-420,"elapsed":13147,"user":{"displayName":"Nam Đỗ Đặng Kiến","userId":"08452134426123711871"}},"outputId":"eb9302bd-78a4-48a8-8231-f2eb12e44c72"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","7-Zip [64] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21\n","p7zip Version 16.02 (locale=en_US.UTF-8,Utf16=on,HugeFiles=on,64 bits,12 CPUs Intel(R) Xeon(R) CPU @ 2.20GHz (50657),ASM,AES-NI)\n","\n","Scanning the drive for archives:\n","  0M Scan /content/gdrive/MyDrive/UIT P . c dữ liệu/source/datasets/\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b                                                                            \b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b1 file, 271088774 bytes (259 MiB)\n","\n","Extracting archive: /content/gdrive/MyDrive/UIT Projects/Khai thác dữ liệu/source/datasets/card_transaction.zip\n","--\n","Path = /content/gdrive/MyDrive/UIT Projects/Khai thác dữ liệu/source/datasets/card_transaction.zip\n","Type = zip\n","Physical Size = 271088774\n","\n","  0%\b\b\b\b    \b\b\b\b  2% - card_transaction.csv\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b                           \b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b  4% - card_transaction.csv\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b                           \b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b  6% - card_transaction.csv\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b                           \b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b  8% - card_transaction.csv\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b                           \b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b 10% - card_transaction.csv\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b                           \b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b 13% - card_transaction.csv\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b                           \b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b 15% - card_transaction.csv\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b                           \b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b 17% - card_transaction.csv\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b                           \b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b 19% - card_transaction.csv\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b                           \b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b 21% - card_transaction.csv\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b                           \b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b 24% - card_transaction.csv\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b                           \b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b 26% - card_transaction.csv\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b                           \b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b 28% - card_transaction.csv\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b                           \b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b 30% - card_transaction.csv\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b                           \b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b 32% - card_transaction.csv\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b                           \b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b 34% - card_transaction.csv\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b                           \b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b 36% - card_transaction.csv\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b                           \b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b 39% - card_transaction.csv\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b                           \b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b 41% - card_transaction.csv\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b                           \b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b 43% - card_transaction.csv\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b                           \b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b 45% - card_transaction.csv\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b                           \b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b 47% - card_transaction.csv\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b                           \b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b 49% - card_transaction.csv\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b                           \b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b 52% - card_transaction.csv\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b                           \b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b 54% - card_transaction.csv\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b                           \b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b 56% - card_transaction.csv\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b                           \b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b 58% - card_transaction.csv\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b                           \b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b 60% - card_transaction.csv\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b                           \b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b 63% - card_transaction.csv\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b                           \b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b 65% - card_transaction.csv\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b                           \b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b 67% - card_transaction.csv\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b                           \b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b 69% - card_transaction.csv\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b                           \b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b 71% - card_transaction.csv\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b                           \b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b 74% - card_transaction.csv\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b                           \b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b 76% - card_transaction.csv\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b                           \b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b 78% - card_transaction.csv\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b                           \b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b 80% - card_transaction.csv\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b                           \b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b 82% - card_transaction.csv\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b                           \b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b 84% - card_transaction.csv\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b                           \b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b 87% - card_transaction.csv\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b                           \b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b 89% - card_transaction.csv\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b                           \b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b 91% - card_transaction.csv\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b                           \b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b 93% - card_transaction.csv\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b                           \b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b 95% - card_transaction.csv\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b                           \b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b 98% - card_transaction.csv\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b                           \b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\bEverything is Ok\n","\n","Size:       2354626737\n","Compressed: 271088774\n"]}]},{"cell_type":"markdown","source":["#### 1. Import libraries and datasets:"],"metadata":{"id":"13aJIQaaFYDI"}},{"cell_type":"code","source":["import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","\n","import time\n","import random\n","import seaborn as sns\n","import matplotlib.pyplot as plt\n","from sklearn.preprocessing import StandardScaler, RobustScaler\n","from sklearn.model_selection import train_test_split, StratifiedShuffleSplit, cross_val_score, GridSearchCV\n","from sklearn.ensemble import RandomForestClassifier\n","\n","import collections\n","from collections import Counter\n","from imblearn.pipeline import make_pipeline as imbalanced_make_pipeline\n","from imblearn.over_sampling import SMOTE\n","from imblearn.under_sampling import NearMiss\n","from imblearn.metrics import classification_report_imbalanced\n","from sklearn.pipeline import make_pipeline\n","from sklearn.model_selection import KFold, StratifiedKFold\n","from sklearn.metrics import precision_score, recall_score, f1_score, roc_auc_score, accuracy_score, classification_report"],"metadata":{"id":"pfAELcsdGZ8t","executionInfo":{"status":"ok","timestamp":1686693042369,"user_tz":-420,"elapsed":2079,"user":{"displayName":"Nam Đỗ Đặng Kiến","userId":"08452134426123711871"}}},"execution_count":3,"outputs":[]},{"cell_type":"code","source":["creditcard_csv = \"/content/gdrive/MyDrive/UIT Projects/Khai thác dữ liệu/source/datasets/creditcard_dataset.csv\"\n","card_transaction_csv = \"/content/card_transaction.csv\""],"metadata":{"id":"rxKJnGXoFdTo","executionInfo":{"status":"ok","timestamp":1686693042371,"user_tz":-420,"elapsed":6,"user":{"displayName":"Nam Đỗ Đặng Kiến","userId":"08452134426123711871"}}},"execution_count":4,"outputs":[]},{"cell_type":"markdown","source":["- Load Credit card data (DATASET 1):"],"metadata":{"id":"D97di1maKssy"}},{"cell_type":"code","source":["df_creditcard = pd.read_csv(creditcard_csv)\n","df_creditcard.head(5)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":299},"id":"bWTsVd5xGunZ","executionInfo":{"status":"ok","timestamp":1686693045193,"user_tz":-420,"elapsed":2828,"user":{"displayName":"Nam Đỗ Đặng Kiến","userId":"08452134426123711871"}},"outputId":"18b46e49-47bf-4d40-c47a-9fda54f6a057"},"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Time        V1        V2        V3        V4        V5        V6        V7  \\\n","0   0.0 -1.359807 -0.072781  2.536347  1.378155 -0.338321  0.462388  0.239599   \n","1   0.0  1.191857  0.266151  0.166480  0.448154  0.060018 -0.082361 -0.078803   \n","2   1.0 -1.358354 -1.340163  1.773209  0.379780 -0.503198  1.800499  0.791461   \n","3   1.0 -0.966272 -0.185226  1.792993 -0.863291 -0.010309  1.247203  0.237609   \n","4   2.0 -1.158233  0.877737  1.548718  0.403034 -0.407193  0.095921  0.592941   \n","\n","         V8        V9  ...       V21       V22       V23       V24       V25  \\\n","0  0.098698  0.363787  ... -0.018307  0.277838 -0.110474  0.066928  0.128539   \n","1  0.085102 -0.255425  ... -0.225775 -0.638672  0.101288 -0.339846  0.167170   \n","2  0.247676 -1.514654  ...  0.247998  0.771679  0.909412 -0.689281 -0.327642   \n","3  0.377436 -1.387024  ... -0.108300  0.005274 -0.190321 -1.175575  0.647376   \n","4 -0.270533  0.817739  ... -0.009431  0.798278 -0.137458  0.141267 -0.206010   \n","\n","        V26       V27       V28  Amount  Class  \n","0 -0.189115  0.133558 -0.021053  149.62      0  \n","1  0.125895 -0.008983  0.014724    2.69      0  \n","2 -0.139097 -0.055353 -0.059752  378.66      0  \n","3 -0.221929  0.062723  0.061458  123.50      0  \n","4  0.502292  0.219422  0.215153   69.99      0  \n","\n","[5 rows x 31 columns]"],"text/html":["\n","  <div id=\"df-3e6e4b5e-8f1a-47a7-ad13-9dbf4e345866\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Time</th>\n","      <th>V1</th>\n","      <th>V2</th>\n","      <th>V3</th>\n","      <th>V4</th>\n","      <th>V5</th>\n","      <th>V6</th>\n","      <th>V7</th>\n","      <th>V8</th>\n","      <th>V9</th>\n","      <th>...</th>\n","      <th>V21</th>\n","      <th>V22</th>\n","      <th>V23</th>\n","      <th>V24</th>\n","      <th>V25</th>\n","      <th>V26</th>\n","      <th>V27</th>\n","      <th>V28</th>\n","      <th>Amount</th>\n","      <th>Class</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.0</td>\n","      <td>-1.359807</td>\n","      <td>-0.072781</td>\n","      <td>2.536347</td>\n","      <td>1.378155</td>\n","      <td>-0.338321</td>\n","      <td>0.462388</td>\n","      <td>0.239599</td>\n","      <td>0.098698</td>\n","      <td>0.363787</td>\n","      <td>...</td>\n","      <td>-0.018307</td>\n","      <td>0.277838</td>\n","      <td>-0.110474</td>\n","      <td>0.066928</td>\n","      <td>0.128539</td>\n","      <td>-0.189115</td>\n","      <td>0.133558</td>\n","      <td>-0.021053</td>\n","      <td>149.62</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.0</td>\n","      <td>1.191857</td>\n","      <td>0.266151</td>\n","      <td>0.166480</td>\n","      <td>0.448154</td>\n","      <td>0.060018</td>\n","      <td>-0.082361</td>\n","      <td>-0.078803</td>\n","      <td>0.085102</td>\n","      <td>-0.255425</td>\n","      <td>...</td>\n","      <td>-0.225775</td>\n","      <td>-0.638672</td>\n","      <td>0.101288</td>\n","      <td>-0.339846</td>\n","      <td>0.167170</td>\n","      <td>0.125895</td>\n","      <td>-0.008983</td>\n","      <td>0.014724</td>\n","      <td>2.69</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1.0</td>\n","      <td>-1.358354</td>\n","      <td>-1.340163</td>\n","      <td>1.773209</td>\n","      <td>0.379780</td>\n","      <td>-0.503198</td>\n","      <td>1.800499</td>\n","      <td>0.791461</td>\n","      <td>0.247676</td>\n","      <td>-1.514654</td>\n","      <td>...</td>\n","      <td>0.247998</td>\n","      <td>0.771679</td>\n","      <td>0.909412</td>\n","      <td>-0.689281</td>\n","      <td>-0.327642</td>\n","      <td>-0.139097</td>\n","      <td>-0.055353</td>\n","      <td>-0.059752</td>\n","      <td>378.66</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1.0</td>\n","      <td>-0.966272</td>\n","      <td>-0.185226</td>\n","      <td>1.792993</td>\n","      <td>-0.863291</td>\n","      <td>-0.010309</td>\n","      <td>1.247203</td>\n","      <td>0.237609</td>\n","      <td>0.377436</td>\n","      <td>-1.387024</td>\n","      <td>...</td>\n","      <td>-0.108300</td>\n","      <td>0.005274</td>\n","      <td>-0.190321</td>\n","      <td>-1.175575</td>\n","      <td>0.647376</td>\n","      <td>-0.221929</td>\n","      <td>0.062723</td>\n","      <td>0.061458</td>\n","      <td>123.50</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2.0</td>\n","      <td>-1.158233</td>\n","      <td>0.877737</td>\n","      <td>1.548718</td>\n","      <td>0.403034</td>\n","      <td>-0.407193</td>\n","      <td>0.095921</td>\n","      <td>0.592941</td>\n","      <td>-0.270533</td>\n","      <td>0.817739</td>\n","      <td>...</td>\n","      <td>-0.009431</td>\n","      <td>0.798278</td>\n","      <td>-0.137458</td>\n","      <td>0.141267</td>\n","      <td>-0.206010</td>\n","      <td>0.502292</td>\n","      <td>0.219422</td>\n","      <td>0.215153</td>\n","      <td>69.99</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 31 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3e6e4b5e-8f1a-47a7-ad13-9dbf4e345866')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-3e6e4b5e-8f1a-47a7-ad13-9dbf4e345866 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-3e6e4b5e-8f1a-47a7-ad13-9dbf4e345866');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["columns = df_creditcard.keys()\n","print(len(columns))\n","print(list(columns))"],"metadata":{"id":"Uqxp--CwKr99","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1686693045194,"user_tz":-420,"elapsed":23,"user":{"displayName":"Nam Đỗ Đặng Kiến","userId":"08452134426123711871"}},"outputId":"0d21e6d6-57d5-405d-8f6e-bdb16faca9a0"},"execution_count":6,"outputs":[{"output_type":"stream","name":"stdout","text":["31\n","['Time', 'V1', 'V2', 'V3', 'V4', 'V5', 'V6', 'V7', 'V8', 'V9', 'V10', 'V11', 'V12', 'V13', 'V14', 'V15', 'V16', 'V17', 'V18', 'V19', 'V20', 'V21', 'V22', 'V23', 'V24', 'V25', 'V26', 'V27', 'V28', 'Amount', 'Class']\n"]}]},{"cell_type":"markdown","source":["- Load Card transaction data (DATASET 2):"],"metadata":{"id":"VF8dnEAIKzts"}},{"cell_type":"code","source":["df_cardtransaction = pd.read_csv(card_transaction_csv)\n","df_cardtransaction.head(5)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"9_Xwto4iHXfz","executionInfo":{"status":"ok","timestamp":1686690716169,"user_tz":-420,"elapsed":98655,"user":{"displayName":"Nam Đỗ Đặng Kiến","userId":"08452134426123711871"}},"outputId":"c1fe68c0-413f-4889-c34b-15c456b40a76"},"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   User  Card  Year  Month  Day   Time   Amount           Use Chip  \\\n","0     0     0  2002      9    1  06:21  $134.09  Swipe Transaction   \n","1     0     0  2002      9    1  06:42   $38.48  Swipe Transaction   \n","2     0     0  2002      9    2  06:22  $120.34  Swipe Transaction   \n","3     0     0  2002      9    2  17:45  $128.95  Swipe Transaction   \n","4     0     0  2002      9    3  06:23  $104.71  Swipe Transaction   \n","\n","         Merchant Name  Merchant City Merchant State      Zip   MCC Errors?  \\\n","0  3527213246127876953       La Verne             CA  91750.0  5300     NaN   \n","1  -727612092139916043  Monterey Park             CA  91754.0  5411     NaN   \n","2  -727612092139916043  Monterey Park             CA  91754.0  5411     NaN   \n","3  3414527459579106770  Monterey Park             CA  91754.0  5651     NaN   \n","4  5817218446178736267       La Verne             CA  91750.0  5912     NaN   \n","\n","  Is Fraud?  \n","0        No  \n","1        No  \n","2        No  \n","3        No  \n","4        No  "],"text/html":["\n","  <div id=\"df-8ae3b36c-0768-4d2f-9cc9-9a03dee08ab4\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>User</th>\n","      <th>Card</th>\n","      <th>Year</th>\n","      <th>Month</th>\n","      <th>Day</th>\n","      <th>Time</th>\n","      <th>Amount</th>\n","      <th>Use Chip</th>\n","      <th>Merchant Name</th>\n","      <th>Merchant City</th>\n","      <th>Merchant State</th>\n","      <th>Zip</th>\n","      <th>MCC</th>\n","      <th>Errors?</th>\n","      <th>Is Fraud?</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2002</td>\n","      <td>9</td>\n","      <td>1</td>\n","      <td>06:21</td>\n","      <td>$134.09</td>\n","      <td>Swipe Transaction</td>\n","      <td>3527213246127876953</td>\n","      <td>La Verne</td>\n","      <td>CA</td>\n","      <td>91750.0</td>\n","      <td>5300</td>\n","      <td>NaN</td>\n","      <td>No</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2002</td>\n","      <td>9</td>\n","      <td>1</td>\n","      <td>06:42</td>\n","      <td>$38.48</td>\n","      <td>Swipe Transaction</td>\n","      <td>-727612092139916043</td>\n","      <td>Monterey Park</td>\n","      <td>CA</td>\n","      <td>91754.0</td>\n","      <td>5411</td>\n","      <td>NaN</td>\n","      <td>No</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2002</td>\n","      <td>9</td>\n","      <td>2</td>\n","      <td>06:22</td>\n","      <td>$120.34</td>\n","      <td>Swipe Transaction</td>\n","      <td>-727612092139916043</td>\n","      <td>Monterey Park</td>\n","      <td>CA</td>\n","      <td>91754.0</td>\n","      <td>5411</td>\n","      <td>NaN</td>\n","      <td>No</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2002</td>\n","      <td>9</td>\n","      <td>2</td>\n","      <td>17:45</td>\n","      <td>$128.95</td>\n","      <td>Swipe Transaction</td>\n","      <td>3414527459579106770</td>\n","      <td>Monterey Park</td>\n","      <td>CA</td>\n","      <td>91754.0</td>\n","      <td>5651</td>\n","      <td>NaN</td>\n","      <td>No</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2002</td>\n","      <td>9</td>\n","      <td>3</td>\n","      <td>06:23</td>\n","      <td>$104.71</td>\n","      <td>Swipe Transaction</td>\n","      <td>5817218446178736267</td>\n","      <td>La Verne</td>\n","      <td>CA</td>\n","      <td>91750.0</td>\n","      <td>5912</td>\n","      <td>NaN</td>\n","      <td>No</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8ae3b36c-0768-4d2f-9cc9-9a03dee08ab4')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-8ae3b36c-0768-4d2f-9cc9-9a03dee08ab4 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-8ae3b36c-0768-4d2f-9cc9-9a03dee08ab4');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["columns = df_cardtransaction.keys()\n","print(len(columns))\n","print(list(columns))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dWJW2LX7Iaca","executionInfo":{"status":"ok","timestamp":1686690716171,"user_tz":-420,"elapsed":18,"user":{"displayName":"Nam Đỗ Đặng Kiến","userId":"08452134426123711871"}},"outputId":"ba762ecd-f949-430f-cbdb-48d1c3279583"},"execution_count":8,"outputs":[{"output_type":"stream","name":"stdout","text":["15\n","['User', 'Card', 'Year', 'Month', 'Day', 'Time', 'Amount', 'Use Chip', 'Merchant Name', 'Merchant City', 'Merchant State', 'Zip', 'MCC', 'Errors?', 'Is Fraud?']\n"]}]},{"cell_type":"markdown","source":["#### Preprocessing data:"],"metadata":{"id":"L3R0EdGkZFgQ"}},{"cell_type":"code","source":["df = df_creditcard\n","df.keys()"],"metadata":{"id":"FW9hG9ApKgiV","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1686693045195,"user_tz":-420,"elapsed":21,"user":{"displayName":"Nam Đỗ Đặng Kiến","userId":"08452134426123711871"}},"outputId":"8a0ecdc6-0e99-46c6-8164-dfdca08a04ad"},"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['Time', 'V1', 'V2', 'V3', 'V4', 'V5', 'V6', 'V7', 'V8', 'V9', 'V10',\n","       'V11', 'V12', 'V13', 'V14', 'V15', 'V16', 'V17', 'V18', 'V19', 'V20',\n","       'V21', 'V22', 'V23', 'V24', 'V25', 'V26', 'V27', 'V28', 'Amount',\n","       'Class'],\n","      dtype='object')"]},"metadata":{},"execution_count":7}]},{"cell_type":"markdown","source":["- Count Fraud and No fraud:"],"metadata":{"id":"nvVZq4nVZevA"}},{"cell_type":"code","source":["class_value_groups = df['Class'].value_counts()\n","number_of_rows = len(df)\n","\n","print('No Frauds', round(class_value_groups[0]/number_of_rows * 100, 2), '% of the dataset')\n","print('Frauds', round(class_value_groups[1]/number_of_rows * 100, 2), '% of the dataset')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"mVUHR43DZc-f","executionInfo":{"status":"ok","timestamp":1686693045196,"user_tz":-420,"elapsed":20,"user":{"displayName":"Nam Đỗ Đặng Kiến","userId":"08452134426123711871"}},"outputId":"e98c5018-6a26-4669-b786-5b649f3a318c"},"execution_count":8,"outputs":[{"output_type":"stream","name":"stdout","text":["No Frauds 99.83 % of the dataset\n","Frauds 0.17 % of the dataset\n"]}]},{"cell_type":"markdown","source":["- Scale Time, Amount columns:"],"metadata":{"id":"wJZvbkBxZnMP"}},{"cell_type":"code","source":["rob_scaler = RobustScaler()\n","\n","scaled_amount = rob_scaler.fit_transform(df['Amount'].values.reshape(-1,1))\n","scaled_time = rob_scaler.fit_transform(df['Time'].values.reshape(-1,1))\n","\n","df.drop(['Time','Amount'], axis=1, inplace=True)\n","\n","df.insert(0, 'scaled_amount', scaled_amount)\n","df.insert(1, 'scaled_time', scaled_time)\n","\n","df.head(5)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":299},"id":"4VAai5lWZjc9","executionInfo":{"status":"ok","timestamp":1686693045199,"user_tz":-420,"elapsed":21,"user":{"displayName":"Nam Đỗ Đặng Kiến","userId":"08452134426123711871"}},"outputId":"6a1f52d1-e195-4774-e6fe-56e2b44079c0"},"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   scaled_amount  scaled_time        V1        V2        V3        V4  \\\n","0       1.783274    -0.994983 -1.359807 -0.072781  2.536347  1.378155   \n","1      -0.269825    -0.994983  1.191857  0.266151  0.166480  0.448154   \n","2       4.983721    -0.994972 -1.358354 -1.340163  1.773209  0.379780   \n","3       1.418291    -0.994972 -0.966272 -0.185226  1.792993 -0.863291   \n","4       0.670579    -0.994960 -1.158233  0.877737  1.548718  0.403034   \n","\n","         V5        V6        V7        V8  ...       V20       V21       V22  \\\n","0 -0.338321  0.462388  0.239599  0.098698  ...  0.251412 -0.018307  0.277838   \n","1  0.060018 -0.082361 -0.078803  0.085102  ... -0.069083 -0.225775 -0.638672   \n","2 -0.503198  1.800499  0.791461  0.247676  ...  0.524980  0.247998  0.771679   \n","3 -0.010309  1.247203  0.237609  0.377436  ... -0.208038 -0.108300  0.005274   \n","4 -0.407193  0.095921  0.592941 -0.270533  ...  0.408542 -0.009431  0.798278   \n","\n","        V23       V24       V25       V26       V27       V28  Class  \n","0 -0.110474  0.066928  0.128539 -0.189115  0.133558 -0.021053      0  \n","1  0.101288 -0.339846  0.167170  0.125895 -0.008983  0.014724      0  \n","2  0.909412 -0.689281 -0.327642 -0.139097 -0.055353 -0.059752      0  \n","3 -0.190321 -1.175575  0.647376 -0.221929  0.062723  0.061458      0  \n","4 -0.137458  0.141267 -0.206010  0.502292  0.219422  0.215153      0  \n","\n","[5 rows x 31 columns]"],"text/html":["\n","  <div id=\"df-bc2e7ac8-ed4a-4b7b-a674-9cff798bc166\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>scaled_amount</th>\n","      <th>scaled_time</th>\n","      <th>V1</th>\n","      <th>V2</th>\n","      <th>V3</th>\n","      <th>V4</th>\n","      <th>V5</th>\n","      <th>V6</th>\n","      <th>V7</th>\n","      <th>V8</th>\n","      <th>...</th>\n","      <th>V20</th>\n","      <th>V21</th>\n","      <th>V22</th>\n","      <th>V23</th>\n","      <th>V24</th>\n","      <th>V25</th>\n","      <th>V26</th>\n","      <th>V27</th>\n","      <th>V28</th>\n","      <th>Class</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1.783274</td>\n","      <td>-0.994983</td>\n","      <td>-1.359807</td>\n","      <td>-0.072781</td>\n","      <td>2.536347</td>\n","      <td>1.378155</td>\n","      <td>-0.338321</td>\n","      <td>0.462388</td>\n","      <td>0.239599</td>\n","      <td>0.098698</td>\n","      <td>...</td>\n","      <td>0.251412</td>\n","      <td>-0.018307</td>\n","      <td>0.277838</td>\n","      <td>-0.110474</td>\n","      <td>0.066928</td>\n","      <td>0.128539</td>\n","      <td>-0.189115</td>\n","      <td>0.133558</td>\n","      <td>-0.021053</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>-0.269825</td>\n","      <td>-0.994983</td>\n","      <td>1.191857</td>\n","      <td>0.266151</td>\n","      <td>0.166480</td>\n","      <td>0.448154</td>\n","      <td>0.060018</td>\n","      <td>-0.082361</td>\n","      <td>-0.078803</td>\n","      <td>0.085102</td>\n","      <td>...</td>\n","      <td>-0.069083</td>\n","      <td>-0.225775</td>\n","      <td>-0.638672</td>\n","      <td>0.101288</td>\n","      <td>-0.339846</td>\n","      <td>0.167170</td>\n","      <td>0.125895</td>\n","      <td>-0.008983</td>\n","      <td>0.014724</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>4.983721</td>\n","      <td>-0.994972</td>\n","      <td>-1.358354</td>\n","      <td>-1.340163</td>\n","      <td>1.773209</td>\n","      <td>0.379780</td>\n","      <td>-0.503198</td>\n","      <td>1.800499</td>\n","      <td>0.791461</td>\n","      <td>0.247676</td>\n","      <td>...</td>\n","      <td>0.524980</td>\n","      <td>0.247998</td>\n","      <td>0.771679</td>\n","      <td>0.909412</td>\n","      <td>-0.689281</td>\n","      <td>-0.327642</td>\n","      <td>-0.139097</td>\n","      <td>-0.055353</td>\n","      <td>-0.059752</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1.418291</td>\n","      <td>-0.994972</td>\n","      <td>-0.966272</td>\n","      <td>-0.185226</td>\n","      <td>1.792993</td>\n","      <td>-0.863291</td>\n","      <td>-0.010309</td>\n","      <td>1.247203</td>\n","      <td>0.237609</td>\n","      <td>0.377436</td>\n","      <td>...</td>\n","      <td>-0.208038</td>\n","      <td>-0.108300</td>\n","      <td>0.005274</td>\n","      <td>-0.190321</td>\n","      <td>-1.175575</td>\n","      <td>0.647376</td>\n","      <td>-0.221929</td>\n","      <td>0.062723</td>\n","      <td>0.061458</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.670579</td>\n","      <td>-0.994960</td>\n","      <td>-1.158233</td>\n","      <td>0.877737</td>\n","      <td>1.548718</td>\n","      <td>0.403034</td>\n","      <td>-0.407193</td>\n","      <td>0.095921</td>\n","      <td>0.592941</td>\n","      <td>-0.270533</td>\n","      <td>...</td>\n","      <td>0.408542</td>\n","      <td>-0.009431</td>\n","      <td>0.798278</td>\n","      <td>-0.137458</td>\n","      <td>0.141267</td>\n","      <td>-0.206010</td>\n","      <td>0.502292</td>\n","      <td>0.219422</td>\n","      <td>0.215153</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 31 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-bc2e7ac8-ed4a-4b7b-a674-9cff798bc166')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-bc2e7ac8-ed4a-4b7b-a674-9cff798bc166 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-bc2e7ac8-ed4a-4b7b-a674-9cff798bc166');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":9}]},{"cell_type":"markdown","source":["- Split data to train and test:"],"metadata":{"id":"PC0gCNzKaBgn"}},{"cell_type":"code","source":["X = df.drop('Class', axis=1)\n","y = df['Class']\n","\n","sss = StratifiedKFold(n_splits=5, random_state=None, shuffle=False)\n","\n","for train_index, test_index in sss.split(X, y):\n","    print(\"Train:\", train_index, \"Test:\", test_index)\n","    original_Xtrain, original_Xtest = X.iloc[train_index], X.iloc[test_index]\n","    original_ytrain, original_ytest = y.iloc[train_index], y.iloc[test_index]\n","\n","# See if both the train and test label distribution are similarly distributed\n","train_unique_label, train_counts_label = np.unique(original_ytrain.values, return_counts=True)\n","test_unique_label, test_counts_label = np.unique(original_ytest.values, return_counts=True)\n","print('-' * 100)\n","\n","print('Label Distributions: \\n')\n","print(train_counts_label/ len(original_ytrain.values))\n","print(test_counts_label/ len(original_ytest.values))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"geGZYUCfZs0s","executionInfo":{"status":"ok","timestamp":1686693045761,"user_tz":-420,"elapsed":582,"user":{"displayName":"Nam Đỗ Đặng Kiến","userId":"08452134426123711871"}},"outputId":"c256e929-45b1-4f65-f468-84f9e2398df1"},"execution_count":10,"outputs":[{"output_type":"stream","name":"stdout","text":["Train: [ 30473  30496  31002 ... 284804 284805 284806] Test: [    0     1     2 ... 57017 57018 57019]\n","Train: [     0      1      2 ... 284804 284805 284806] Test: [ 30473  30496  31002 ... 113964 113965 113966]\n","Train: [     0      1      2 ... 284804 284805 284806] Test: [ 81609  82400  83053 ... 170946 170947 170948]\n","Train: [     0      1      2 ... 284804 284805 284806] Test: [150654 150660 150661 ... 227866 227867 227868]\n","Train: [     0      1      2 ... 227866 227867 227868] Test: [212516 212644 213092 ... 284804 284805 284806]\n","----------------------------------------------------------------------------------------------------\n","Label Distributions: \n","\n","[0.99827076 0.00172924]\n","[0.99827952 0.00172048]\n"]}]},{"cell_type":"markdown","source":["- SMOTE:"],"metadata":{"id":"E6-6rzfHcsSO"}},{"cell_type":"code","source":["oversample = SMOTE()\n","X_train, y_train = oversample.fit_resample(original_Xtrain, original_ytrain)\n","X_test, y_test = original_Xtest.values, original_ytest.values"],"metadata":{"id":"xjP_GLLNaDkh","executionInfo":{"status":"ok","timestamp":1686693045762,"user_tz":-420,"elapsed":7,"user":{"displayName":"Nam Đỗ Đặng Kiến","userId":"08452134426123711871"}}},"execution_count":11,"outputs":[]},{"cell_type":"code","source":["print((y_train == 1).sum())\n","print((y_train == 0).sum())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"m7mKEqVmgyvP","executionInfo":{"status":"ok","timestamp":1686693045762,"user_tz":-420,"elapsed":6,"user":{"displayName":"Nam Đỗ Đặng Kiến","userId":"08452134426123711871"}},"outputId":"2433b46a-853f-4d13-d719-7528e65dd310"},"execution_count":12,"outputs":[{"output_type":"stream","name":"stdout","text":["227452\n","227452\n"]}]},{"cell_type":"markdown","source":["#### GA:"],"metadata":{"id":"HE9EBTYBefKl"}},{"cell_type":"code","source":["POPULATION_SIZE = 100\n","\n","ALL_GENEs = [\n","    'scaled_amount', 'scaled_time', 'V1', 'V2', 'V3', 'V4', 'V5', 'V6', 'V7', 'V8', 'V9', 'V10',\n","    'V11', 'V12', 'V13', 'V14', 'V15', 'V16', 'V17', 'V18', 'V19', 'V20',\n","    'V21', 'V22', 'V23', 'V24', 'V25', 'V26', 'V27', 'V28'\n","]"],"metadata":{"id":"r55HpXE3egNU","executionInfo":{"status":"ok","timestamp":1686693045762,"user_tz":-420,"elapsed":4,"user":{"displayName":"Nam Đỗ Đặng Kiến","userId":"08452134426123711871"}}},"execution_count":13,"outputs":[]},{"cell_type":"code","source":["class Individual(object):\n","    def __init__(self, chromosome):\n","        self.chromosome = chromosome\n","        self.fitness = self.calculate_fitness()\n","\n","    @classmethod\n","    def create_random_gene(self):\n","        global ALL_GENEs\n","        gene = random.choice(ALL_GENEs)\n","        return gene\n","\n","    @classmethod\n","    def create_random_chromosome(self, chro_len):\n","        global TARGET\n","        chromosome_len = chro_len\n","        chromosome = []\n","        for _ in range(chromosome_len):\n","            random_gene = self.create_random_gene()\n","            chromosome.append(random_gene)\n","        return chromosome\n","\n","    def crossover(self, individual_2):\n","        child_chromosome = []\n","        for gene_of_ind1, gene_of_ind2 in zip(self.chromosome, individual_2.chromosome):\n","            prob = random.random()\n","\n","            if prob < 0.45:\n","                child_chromosome.append(gene_of_ind1)\n","            elif prob < 0.9:\n","                child_chromosome.append(gene_of_ind2)\n","            else:\n","                random_gene = self.create_random_gene()\n","                child_chromosome.append(random_gene)\n","        child = Individual(child_chromosome)\n","        return child\n","\n","    def calculate_fitness(self):\n","        global TARGET\n","        fitness = 0\n","        rf = RandomForestClassifier(criterion= 'entropy', max_depth=3, max_features='log2', n_estimators=3, n_jobs=4)\n","\n","        columns_to_train = self.chromosome\n","        X = X_train[columns_to_train].values\n","        Y = y_train.values\n","\n","        _, F, _, y = train_test_split(X, Y, test_size=0.1)\n","        Fx_train, Fx_test, Fy_train, Fy_test = train_test_split(F, y, test_size=0.2)\n","\n","        rf.fit(Fx_train, Fy_train)\n","        # evaluating\n","        y_pred_test = rf.predict(Fx_test)\n","        test_score = accuracy_score(Fy_test, y_pred_test)\n","\n","        fitness = test_score\n","        return fitness"],"metadata":{"id":"yIYnbjRnejnx","executionInfo":{"status":"ok","timestamp":1686693046451,"user_tz":-420,"elapsed":4,"user":{"displayName":"Nam Đỗ Đặng Kiến","userId":"08452134426123711871"}}},"execution_count":14,"outputs":[]},{"cell_type":"code","source":["max_generation = 100\n","current_generation = 1\n","\n","population = []\n","\n","# initialize population\n","for _ in range(POPULATION_SIZE):\n","    random_chromosome = Individual.create_random_chromosome(chro_len=10)\n","    _individual = Individual(random_chromosome)\n","    population.append(_individual)\n","\n","# genetic process\n","while current_generation < max_generation:\n","    population = sorted(population, key = lambda x:x.fitness, reverse=True)\n","\n","    next_generation_of_population = []\n","\n","    _10_percent_len = int(10*POPULATION_SIZE/100)\n","    next_generation_of_population.extend(population[:_10_percent_len])\n","\n","    _50_percent_len = int(POPULATION_SIZE/2)\n","    _90_percent_len = int(90*POPULATION_SIZE/100)\n","    for _ in range(_90_percent_len):\n","        # crossover top 50% individuals\n","        parent1 = random.choice(population[:_50_percent_len])\n","        parent2 = random.choice(population[:_50_percent_len])\n","        child = parent1.crossover(parent2)\n","\n","        next_generation_of_population.append(child)\n","\n","    population = next_generation_of_population\n","    current_generation += 1\n","\n","    print(\"Current Generation: {0} -- Top 1 String: {1} -- Fitness: {2}\".format(\n","                            current_generation,\n","                            \"\".join(population[0].chromosome),\n","                            population[0].fitness))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"utMqHRyeenww","outputId":"3bd58d06-ded4-45d5-8994-64c5dc9d189d","executionInfo":{"status":"ok","timestamp":1686694206616,"user_tz":-420,"elapsed":1146511,"user":{"displayName":"Nam Đỗ Đặng Kiến","userId":"08452134426123711871"}}},"execution_count":15,"outputs":[{"output_type":"stream","name":"stdout","text":["Current Generation: 2 -- Top 1 String: V10V5V20scaled_amountV12scaled_amountV6V19V14V15 -- Fitness: 0.943400373667436\n","Current Generation: 3 -- Top 1 String: V10V5V20scaled_amountV12scaled_amountV6V19V14V15 -- Fitness: 0.943400373667436\n","Current Generation: 4 -- Top 1 String: V10V5V20scaled_amountV12scaled_amountV6V19V14V15 -- Fitness: 0.943400373667436\n","Current Generation: 5 -- Top 1 String: V10V5V20scaled_amountV12scaled_amountV6V19V14V15 -- Fitness: 0.943400373667436\n","Current Generation: 6 -- Top 1 String: V10V5V20scaled_amountV12scaled_amountV6V19V14V15 -- Fitness: 0.943400373667436\n","Current Generation: 7 -- Top 1 String: V10V5V20scaled_amountV12scaled_amountV6V19V14V15 -- Fitness: 0.943400373667436\n","Current Generation: 8 -- Top 1 String: V2V10scaled_timeV21V2V12V4V16V14V12 -- Fitness: 0.9440597867897571\n","Current Generation: 9 -- Top 1 String: V2V10scaled_timeV21V2V12V4V16V14V12 -- Fitness: 0.9440597867897571\n","Current Generation: 10 -- Top 1 String: V10V27V15scaled_amountV12V20V4V14V4V24 -- Fitness: 0.9479063633366304\n","Current Generation: 11 -- Top 1 String: V8V19V7V4V14V9V4V14V12V12 -- Fitness: 0.9481261677107374\n","Current Generation: 12 -- Top 1 String: V27V9V15V4V23V14V4V14V12V12 -- Fitness: 0.9504341136388614\n","Current Generation: 13 -- Top 1 String: V27V9V15V4V23V14V4V14V12V12 -- Fitness: 0.9504341136388614\n","Current Generation: 14 -- Top 1 String: V27V9V15V4V23V14V4V14V12V12 -- Fitness: 0.9504341136388614\n","Current Generation: 15 -- Top 1 String: V27V9V15V4V23V14V4V14V12V12 -- Fitness: 0.9504341136388614\n","Current Generation: 16 -- Top 1 String: V27V9V15V4V23V14V4V14V12V12 -- Fitness: 0.9504341136388614\n","Current Generation: 17 -- Top 1 String: V27V9V15V4V23V14V4V14V12V12 -- Fitness: 0.9504341136388614\n","Current Generation: 18 -- Top 1 String: V27V9V15V4V23V14V4V14V12V12 -- Fitness: 0.9504341136388614\n","Current Generation: 19 -- Top 1 String: V12V19V11V4V4V7V11V14V12V14 -- Fitness: 0.9516430376964502\n","Current Generation: 20 -- Top 1 String: V12V19V11V4V4V7V11V14V12V14 -- Fitness: 0.9516430376964502\n","Current Generation: 21 -- Top 1 String: V12V19V11V4V4V7V11V14V12V14 -- Fitness: 0.9516430376964502\n","Current Generation: 22 -- Top 1 String: V12V19V11V4V4V7V11V14V12V14 -- Fitness: 0.9516430376964502\n","Current Generation: 23 -- Top 1 String: V12V19V11V4V4V7V11V14V12V14 -- Fitness: 0.9516430376964502\n","Current Generation: 24 -- Top 1 String: V12V19V11V4V4V7V11V14V12V14 -- Fitness: 0.9516430376964502\n","Current Generation: 25 -- Top 1 String: V12V19V11V4V4V7V11V14V12V14 -- Fitness: 0.9516430376964502\n","Current Generation: 26 -- Top 1 String: V12V19V11V4V4V7V11V14V12V14 -- Fitness: 0.9516430376964502\n","Current Generation: 27 -- Top 1 String: V12V19V11V4V4V7V11V14V12V14 -- Fitness: 0.9516430376964502\n","Current Generation: 28 -- Top 1 String: V12V19V11V4V4V7V11V14V12V14 -- Fitness: 0.9516430376964502\n","Current Generation: 29 -- Top 1 String: V12V19V11V4V4V7V11V14V12V14 -- Fitness: 0.9516430376964502\n","Current Generation: 30 -- Top 1 String: V12V19V11V4V4V7V11V14V12V14 -- Fitness: 0.9516430376964502\n","Current Generation: 31 -- Top 1 String: V12V19V11V4V4V7V11V14V12V14 -- Fitness: 0.9516430376964502\n","Current Generation: 32 -- Top 1 String: V12V19V11V4V4V7V11V14V12V14 -- Fitness: 0.9516430376964502\n","Current Generation: 33 -- Top 1 String: V12V19V11V4V4V7V11V14V12V14 -- Fitness: 0.9516430376964502\n","Current Generation: 34 -- Top 1 String: V12V19V11V4V4V7V11V14V12V14 -- Fitness: 0.9516430376964502\n","Current Generation: 35 -- Top 1 String: V12V19V11V4V4V7V11V14V12V14 -- Fitness: 0.9516430376964502\n","Current Generation: 36 -- Top 1 String: V12V19V11V4V4V7V11V14V12V14 -- Fitness: 0.9516430376964502\n","Current Generation: 37 -- Top 1 String: V12V19V11V4V4V7V11V14V12V14 -- Fitness: 0.9516430376964502\n","Current Generation: 38 -- Top 1 String: V20V19V7scaled_timeV3V14V4V14V12V12 -- Fitness: 0.9535113748763601\n","Current Generation: 39 -- Top 1 String: V20V19V7scaled_timeV3V14V4V14V12V12 -- Fitness: 0.9535113748763601\n","Current Generation: 40 -- Top 1 String: V20V19V7scaled_timeV3V14V4V14V12V12 -- Fitness: 0.9535113748763601\n","Current Generation: 41 -- Top 1 String: V20V19V7scaled_timeV3V14V4V14V12V12 -- Fitness: 0.9535113748763601\n","Current Generation: 42 -- Top 1 String: V20V19V7scaled_timeV3V14V4V14V12V12 -- Fitness: 0.9535113748763601\n","Current Generation: 43 -- Top 1 String: V20V19V7scaled_timeV3V14V4V14V12V12 -- Fitness: 0.9535113748763601\n","Current Generation: 44 -- Top 1 String: V20V19V7scaled_timeV3V14V4V14V12V12 -- Fitness: 0.9535113748763601\n","Current Generation: 45 -- Top 1 String: V20V19V7scaled_timeV3V14V4V14V12V12 -- Fitness: 0.9535113748763601\n","Current Generation: 46 -- Top 1 String: V20V19V7scaled_timeV3V14V4V14V12V12 -- Fitness: 0.9535113748763601\n","Current Generation: 47 -- Top 1 String: V20V19V7scaled_timeV3V14V4V14V12V12 -- Fitness: 0.9535113748763601\n","Current Generation: 48 -- Top 1 String: V20V19V7scaled_timeV3V14V4V14V12V12 -- Fitness: 0.9535113748763601\n","Current Generation: 49 -- Top 1 String: V20V19V7scaled_timeV3V14V4V14V12V12 -- Fitness: 0.9535113748763601\n","Current Generation: 50 -- Top 1 String: V20V19V7scaled_timeV3V14V4V14V12V12 -- Fitness: 0.9535113748763601\n","Current Generation: 51 -- Top 1 String: V20V19V7scaled_timeV3V14V4V14V12V12 -- Fitness: 0.9535113748763601\n","Current Generation: 52 -- Top 1 String: V20V19V7scaled_timeV3V14V4V14V12V12 -- Fitness: 0.9535113748763601\n","Current Generation: 53 -- Top 1 String: V20V19V7scaled_timeV3V14V4V14V12V12 -- Fitness: 0.9535113748763601\n","Current Generation: 54 -- Top 1 String: V20V19V7scaled_timeV3V14V4V14V12V12 -- Fitness: 0.9535113748763601\n","Current Generation: 55 -- Top 1 String: V20V19V7scaled_timeV3V14V4V14V12V12 -- Fitness: 0.9535113748763601\n","Current Generation: 56 -- Top 1 String: V20V19V7scaled_timeV3V14V4V14V12V12 -- Fitness: 0.9535113748763601\n","Current Generation: 57 -- Top 1 String: V20V19V7scaled_timeV3V14V4V14V12V12 -- Fitness: 0.9535113748763601\n","Current Generation: 58 -- Top 1 String: V20V19V7scaled_timeV3V14V4V14V12V12 -- Fitness: 0.9535113748763601\n","Current Generation: 59 -- Top 1 String: V20V19V7scaled_timeV3V14V4V14V12V12 -- Fitness: 0.9535113748763601\n","Current Generation: 60 -- Top 1 String: V20V19V7scaled_timeV3V14V4V14V12V12 -- Fitness: 0.9535113748763601\n","Current Generation: 61 -- Top 1 String: V20V19V7scaled_timeV3V14V4V14V12V12 -- Fitness: 0.9535113748763601\n","Current Generation: 62 -- Top 1 String: V20V19V7scaled_timeV3V14V4V14V12V12 -- Fitness: 0.9535113748763601\n","Current Generation: 63 -- Top 1 String: V20V19V7scaled_timeV3V14V4V14V12V12 -- Fitness: 0.9535113748763601\n","Current Generation: 64 -- Top 1 String: V20V19V7scaled_timeV3V14V4V14V12V12 -- Fitness: 0.9535113748763601\n","Current Generation: 65 -- Top 1 String: V20V19V7scaled_timeV3V14V4V14V12V12 -- Fitness: 0.9535113748763601\n","Current Generation: 66 -- Top 1 String: V20V19V7scaled_timeV3V14V4V14V12V12 -- Fitness: 0.9535113748763601\n","Current Generation: 67 -- Top 1 String: V20V19V7scaled_timeV3V14V4V14V12V12 -- Fitness: 0.9535113748763601\n","Current Generation: 68 -- Top 1 String: V20V19V7scaled_timeV3V14V4V14V12V12 -- Fitness: 0.9535113748763601\n","Current Generation: 69 -- Top 1 String: V20V19V7scaled_timeV3V14V4V14V12V12 -- Fitness: 0.9535113748763601\n","Current Generation: 70 -- Top 1 String: V20V19V7scaled_timeV3V14V4V14V12V12 -- Fitness: 0.9535113748763601\n","Current Generation: 71 -- Top 1 String: V20V19V7scaled_timeV3V14V4V14V12V12 -- Fitness: 0.9535113748763601\n","Current Generation: 72 -- Top 1 String: V20V19V7scaled_timeV3V14V4V14V12V12 -- Fitness: 0.9535113748763601\n","Current Generation: 73 -- Top 1 String: V20V19V7scaled_timeV3V14V4V14V12V12 -- Fitness: 0.9535113748763601\n","Current Generation: 74 -- Top 1 String: V20V19V7scaled_timeV3V14V4V14V12V12 -- Fitness: 0.9535113748763601\n","Current Generation: 75 -- Top 1 String: V20V19V7scaled_timeV3V14V4V14V12V12 -- Fitness: 0.9535113748763601\n","Current Generation: 76 -- Top 1 String: V20V19V7scaled_timeV3V14V4V14V12V12 -- Fitness: 0.9535113748763601\n","Current Generation: 77 -- Top 1 String: V20V19V7scaled_timeV3V14V4V14V12V12 -- Fitness: 0.9535113748763601\n","Current Generation: 78 -- Top 1 String: V20V19V7scaled_timeV3V14V4V14V12V12 -- Fitness: 0.9535113748763601\n","Current Generation: 79 -- Top 1 String: V20V19V7scaled_timeV3V14V4V14V12V12 -- Fitness: 0.9535113748763601\n","Current Generation: 80 -- Top 1 String: V20V19V7scaled_timeV3V14V4V14V12V12 -- Fitness: 0.9535113748763601\n","Current Generation: 81 -- Top 1 String: V20V19V7scaled_timeV3V14V4V14V12V12 -- Fitness: 0.9535113748763601\n","Current Generation: 82 -- Top 1 String: V20V19V7scaled_timeV3V14V4V14V12V12 -- Fitness: 0.9535113748763601\n","Current Generation: 83 -- Top 1 String: V20V19V7scaled_timeV3V14V4V14V12V12 -- Fitness: 0.9535113748763601\n","Current Generation: 84 -- Top 1 String: V20V19V7scaled_timeV3V14V4V14V12V12 -- Fitness: 0.9535113748763601\n","Current Generation: 85 -- Top 1 String: V20V19V7scaled_timeV3V14V4V14V12V12 -- Fitness: 0.9535113748763601\n","Current Generation: 86 -- Top 1 String: V20V19V7scaled_timeV3V14V4V14V12V12 -- Fitness: 0.9535113748763601\n","Current Generation: 87 -- Top 1 String: V20V19V7scaled_timeV3V14V4V14V12V12 -- Fitness: 0.9535113748763601\n","Current Generation: 88 -- Top 1 String: V20V19V7scaled_timeV3V14V4V14V12V12 -- Fitness: 0.9535113748763601\n","Current Generation: 89 -- Top 1 String: V20V19V7scaled_timeV3V14V4V14V12V12 -- Fitness: 0.9535113748763601\n","Current Generation: 90 -- Top 1 String: V20V19V7scaled_timeV3V14V4V14V12V12 -- Fitness: 0.9535113748763601\n","Current Generation: 91 -- Top 1 String: V20V19V7scaled_timeV3V14V4V14V12V12 -- Fitness: 0.9535113748763601\n","Current Generation: 92 -- Top 1 String: V20V19V7scaled_timeV3V14V4V14V12V12 -- Fitness: 0.9535113748763601\n","Current Generation: 93 -- Top 1 String: V20V19V7scaled_timeV3V14V4V14V12V12 -- Fitness: 0.9535113748763601\n","Current Generation: 94 -- Top 1 String: V20V19V7scaled_timeV3V14V4V14V12V12 -- Fitness: 0.9535113748763601\n","Current Generation: 95 -- Top 1 String: V20V19V7scaled_timeV3V14V4V14V12V12 -- Fitness: 0.9535113748763601\n","Current Generation: 96 -- Top 1 String: V20V19V7scaled_timeV3V14V4V14V12V12 -- Fitness: 0.9535113748763601\n","Current Generation: 97 -- Top 1 String: V20V19V7scaled_timeV3V14V4V14V12V12 -- Fitness: 0.9535113748763601\n","Current Generation: 98 -- Top 1 String: V20V19V7scaled_timeV3V14V4V14V12V12 -- Fitness: 0.9535113748763601\n","Current Generation: 99 -- Top 1 String: V20V19V7scaled_timeV3V14V4V14V12V12 -- Fitness: 0.9535113748763601\n","Current Generation: 100 -- Top 1 String: V20V19V7scaled_timeV3V14V4V14V12V12 -- Fitness: 0.9535113748763601\n"]}]},{"cell_type":"code","source":["for ind in population[:5]:\n","  print(ind.chromosome)"],"metadata":{"id":"iGrfqT8hkWU1","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1686694636525,"user_tz":-420,"elapsed":1099,"user":{"displayName":"Nam Đỗ Đặng Kiến","userId":"08452134426123711871"}},"outputId":"d2ac47ad-808d-4f05-f0b0-b996bb5f94c0"},"execution_count":18,"outputs":[{"output_type":"stream","name":"stdout","text":["['V20', 'V19', 'V7', 'scaled_time', 'V3', 'V14', 'V4', 'V14', 'V12', 'V12']\n","['V4', 'V19', 'scaled_amount', 'scaled_time', 'V3', 'V23', 'V4', 'V14', 'V12', 'V12']\n","['V4', 'V18', 'V27', 'scaled_time', 'V18', 'V1', 'V4', 'V14', 'V9', 'V12']\n","['V4', 'V3', 'V10', 'V6', 'V16', 'V14', 'V4', 'V14', 'V12', 'V12']\n","['V4', 'V9', 'V7', 'V14', 'V14', 'V14', 'V4', 'V9', 'V12', 'V12']\n"]}]},{"cell_type":"code","source":["rf = RandomForestClassifier(criterion= 'entropy', max_depth=6, max_features='log2', n_estimators=3, n_jobs=10)\n","rf.fit(X_train, y_train)\n","# evaluating\n","y_pred_test = rf.predict(X_test)\n","ac = accuracy_score(y_test, y_pred_test)\n","print(ac)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"AIDI_QyN1b_l","executionInfo":{"status":"ok","timestamp":1686694881876,"user_tz":-420,"elapsed":2372,"user":{"displayName":"Nam Đỗ Đặng Kiến","userId":"08452134426123711871"}},"outputId":"a6f41ce9-2f51-480a-eb29-00a33d3c926c"},"execution_count":19,"outputs":[{"output_type":"stream","name":"stdout","text":["0.9952423588069029\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/base.py:439: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names\n","  warnings.warn(\n"]}]},{"cell_type":"code","source":["import pickle\n","\n","with open('model.pkl','wb') as f:\n","    pickle.dump(rf,f)"],"metadata":{"id":"jEC5sFEv2y5w","executionInfo":{"status":"ok","timestamp":1686695209482,"user_tz":-420,"elapsed":573,"user":{"displayName":"Nam Đỗ Đặng Kiến","userId":"08452134426123711871"}}},"execution_count":20,"outputs":[]},{"cell_type":"code","source":["import pickle\n","\n","with open('model.pkl', 'rb') as f:\n","    clf2 = pickle.load(f)"],"metadata":{"id":"PX3AfQ5k3jeK"},"execution_count":null,"outputs":[]}]}